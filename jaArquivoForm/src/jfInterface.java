
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.IOException;
import static java.lang.System.exit;
import java.util.Formatter;
import java.util.FormatterClosedException;
import java.util.NoSuchElementException;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author EDGARD LAMOUNIER -- JAN/2015
 */
public class jfInterface extends javax.swing.JFrame {

    /**
     * Creates new form jfInterface
     */
    public jfInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfAccount = new javax.swing.JTextField();
        jbGrava = new javax.swing.JButton();
        jbRelatorio = new javax.swing.JButton();
        jtfFirstName = new javax.swing.JTextField();
        jtfLastName = new javax.swing.JTextField();
        jtfBalance = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jbLimpar = new javax.swing.JButton();
        jbAbrir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Arquivo de Contas");

        jLabel1.setText("Nro. da Conta:");

        jLabel2.setText("Primeiro Nome:");

        jLabel3.setText("Ultimo Nome:");

        jLabel4.setText("Saldo:");

        jtfAccount.setToolTipText("");
        jtfAccount.setName(""); // NOI18N

        jbGrava.setText("GRAVA");
        jbGrava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGravaActionPerformed(evt);
            }
        });

        jbRelatorio.setText("RELATÓRIO");
        jbRelatorio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbRelatorioMouseClicked(evt);
            }
        });

        jScrollPane1.setName("Relatório"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jbLimpar.setText("LIMPA");
        jbLimpar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbLimparMouseClicked(evt);
            }
        });

        jbAbrir.setText("ABRIR");
        jbAbrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbAbrirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(jbAbrir)
                        .addGap(30, 30, 30)
                        .addComponent(jbGrava)
                        .addGap(8, 8, 8)
                        .addComponent(jbLimpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbRelatorio))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel3)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtfAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jtfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jtfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jtfBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jbLimpar)
                    .addComponent(jbRelatorio)
                    .addComponent(jbGrava)
                    .addComponent(jbAbrir)))
        );

        jbLimpar.getAccessibleContext().setAccessibleName("jbLimpa");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbGravaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGravaActionPerformed
        int nroConta = Integer.parseInt(jtfAccount.getText());
        double balanco = Double.parseDouble(jtfBalance.getText());
        
        application.addRecords(nroConta, jtfFirstName.getText(), 
                               jtfLastName.getText(), balanco);
        
    }//GEN-LAST:event_jbGravaActionPerformed

    private void jbLimparMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbLimparMouseClicked
        jtfAccount.setText("");
        jtfFirstName.setText("");
        jtfLastName.setText("");      
        jtfBalance.setText("");   
    }//GEN-LAST:event_jbLimparMouseClicked

    private void jbRelatorioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbRelatorioMouseClicked
        application.closeFile();
    }//GEN-LAST:event_jbRelatorioMouseClicked

    private void jbAbrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbAbrirMouseClicked

        application.openFile(); // TODO add your handling code here:
    }//GEN-LAST:event_jbAbrirMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfInterface().setVisible(true);  
            }
        });
    }

    private CreateTextFile application = new CreateTextFile();
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jbAbrir;
    private javax.swing.JButton jbGrava;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbRelatorio;
    private javax.swing.JTextField jtfAccount;
    private javax.swing.JTextField jtfBalance;
    private javax.swing.JTextField jtfFirstName;
    private javax.swing.JTextField jtfLastName;
    // End of variables declaration//GEN-END:variables

    private void clearFields() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}


//        System.out.println("Teste de insercao de registros");
//        
//        CreateTextFile application = new CreateTextFile();
//        //BufferedWriter output = application.openFile();
//                
//        
//        AccountRecord record = new AccountRecord();
//        int     nConta;
//        double  saldo;
//        
//        nConta = Integer.parseInt(jtfAccount.getText());
//        saldo = Double.parseDouble(jtfBalance.getText());
//        
//        try // gera saída dos valores para o arquivo
//         {
//            // recupera os dados para saída
//            record.setAccount( nConta ); // lê o número de conta
//            record.setFirstName( jtfFirstName.getText()); // lê o primeiro nome     
//            record.setLastName( jtfLastName.getText()); // lê o sobrenome       
//            record.setBalance( saldo ); // lê o saldo
//
//            if ( record.getAccount() > 0 )
//            {
//               /*
//               // grava um novo registro
//               output.format( "%d %s %s %.2f\n", record.getAccount(),
//                  record.getFirstName(), record.getLastName(),       
//                  record.getBalance() ); 
//               */
//                
//               // grava um novo registro
//               try {
//               output.write(" " + String.valueOf(record.getAccount()) +
//                            " " + record.getFirstName() +
//                            " " + record.getLastName() + 
//                            " " + String.valueOf(record.getBalance()));
//                   
//               //output.write(String.valueOf(record.getAccount()));
//               //output.write(record.getFirstName());
//               //output.write(record.getLastName());
//               //output.write(String.valueOf(record.getBalance()));
//               output.newLine();
//               output.flush();
//               }
//               catch (IOException ioe)
//      {
//          ioe.printStackTrace();
//      }
//                       
//            } // fim do if
//            else
//            {
//               System.out.println(
//                  "Account number must be greater than 0." );
//            } // fim do else
//         } // fim do try
//        catch ( FormatterClosedException formatterClosedException )
//         {
//            System.err.println( "Error writing to file." );
//            return;
//         } // fim do catch
//         catch ( NoSuchElementException elementException )
//         {
//            System.err.println( "Invalid input. Please try again." );
//         } // fim do catch
//        finally {
//            if ( output != null ) 
//              try {
//                   output.close();
//              } catch (IOException ioe2) {
//                  // just ignore it
//              }
//        }